package com.example.c868Backend;

import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController	// This means that this class is a RestController
@RequestMapping(path="/item") // This means URL's start with /item (after Application path)
public class TypeController {
    @Autowired // This means to get the bean called itemRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TypeRepository typeRepository;

    @PostMapping(path="/type/add", produces = MediaType.APPLICATION_JSON_VALUE) // Map ONLY POST Requests
    public @ResponseBody Type addNewType (@RequestBody Type type) {
        typeRepository.save(type);
        return type;
    }

    @GetMapping(path="/type/all")
    public @ResponseBody Iterable<Type> getAllTypes() {
        // This returns a JSON or XML with the items
        return typeRepository.findAll();
    }

    @GetMapping(path="/type/{id}")
    public @ResponseBody
    Optional<Type> getType(@PathVariable Integer id) {
        // This returns a JSON or XML with the items
        return typeRepository.findById(id);
    }

    @DeleteMapping(path="/type/delete")
    public @ResponseBody void deleteType(@RequestBody Type type) {
        // This deletes a JSON or XML with the items
        typeRepository.delete(type);
    }
}
