package com.example.c868Backend;

import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController	// This means that this class is a RestController
@RequestMapping(path="/item") // This means URL's start with /item (after Application path)
public class MainController {
	@Autowired // This means to get the bean called itemRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private ItemRepository itemRepository;

	@PostMapping(path="/add", produces = MediaType.APPLICATION_JSON_VALUE) // Map ONLY POST Requests
	public @ResponseBody Item addNewItem (@RequestBody Item item) {
		itemRepository.save(item);
		return item;
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Item> getAllItems() {
		// This returns a JSON or XML with the items
		return itemRepository.findAll();
	}

	@GetMapping(path="/{id}")
	public @ResponseBody Optional<Item> getItem(@PathVariable Integer id) {
		// This returns a JSON or XML with the items
		return itemRepository.findById(id);
	}

	@DeleteMapping(path="/delete/{id}")
	public @ResponseBody void deleteItemById(@PathVariable Integer id) {
		// This deletes a JSON or XML with the items
		itemRepository.deleteById(id);
	}

	@DeleteMapping(path="/delete")
	public @ResponseBody void deleteItem(@RequestBody Item item) {
		// This deletes a JSON or XML with the items
		itemRepository.delete(item);
	}
}
